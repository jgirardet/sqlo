name: Sqlo

on:
  pull_request:
  push:
    branches:
      - main
      - "*-dev"

jobs:
  check:
    name: Check
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - uses: arduino/setup-task@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - run: task clippy

  sqlite:
    name: Sqlite
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - uses: actions-rs/cargo@v1
        with:
          command: install
          args: sqlx-cli

      - uses: arduino/setup-task@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - run: sqlite3 --version
      - run: task sq-test

  postgres:
    name: Postgres
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: install sqlix-cli
        uses: actions-rs/install@v0.1
        with:
          crate: sqlx-cli
          version: latest
          use-tool-cache: true

      - uses: arduino/setup-task@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - run: task pg-run
      - run: sleep 20
      - run: task pg-test

  mysql:
    name: Mysql
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: install sqlix-cli
        uses: actions-rs/install@v0.1
        with:
          crate: sqlx-cli
          version: latest
          use-tool-cache: true

      - uses: arduino/setup-task@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - run: task my-run
      - run: sleep 20
      - run: task my-test

  publish:
    name: Publish
    runs-on: ubuntu-22.04
    needs:
      - check
      - sqlite
      - postgres
      - mysql
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - uses: katyo/publish-crates@v2
        with:
          registry-token: ${{ secrets.CRATES_TOKEN }}
          args: --features=sqlite
